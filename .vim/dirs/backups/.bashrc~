# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

if command -v tmux &> /dev/null && [ -z "$TMUX" ]; then
    tmux attach -t default || tmux new -s default
fi

# LOAD CONFIGS
source ~/configload.bash

# TMUX CONFIG
tmux source-file ~/tmux.conf

# ALIASES
export TERM=xterm-256color

export PS1="\[\e[1;36m\][kbelv]\[\e[m\]\[\e[1;31m\][\W]\[\e[m\] $ "

alias ll='ls -la | less'
alias lm='ls -la | more'
alias la='ls -a'
alias l='ls -la'

# DIRS
alias gohome='cd "/mnt/c/Users/kbelv/"'
alias gosrc='cd "/mnt/c/Users/kbelv/src"'
alias gosb='cd "/mnt/c/Users/kbelv/src/sandboxes"'
alias godocs='cd "/mnt/c/Users/kbelv/OneDrive/Documents/"'
alias godesk='cd "/mnt/c/Users/kbelv/OneDrive/Desktop/"'

alias godata='cd "/mnt/c/Users/kbelv/OneDrive/Documents/Datasheets"; view ProductRegistry.txt'
alias eddata='cd "/mnt/c/Users/kbelv/OneDrive/Documents/Datasheets"; vim ProductRegistry.txt'

alias gogrg='cd "/mnt/c/Users/kbelv/OneDrive/Documents/GarageRemodel"; vim -S ~/.vim/sessions/garageview.vim'
alias edgrg='cd "/mnt/c/Users/kbelv/OneDrive/Documents/GarageRemodel"; vim -S ~/.vim/sessions/garageedit.vim'

#alias goproj=''

# SITES
alias canvas='cmd.exe /c start https://umich.instructure.com'
alias gmail='cmd.exe /c start https://umich.infrastructure.com'
alias youtube='cmd.exe /c start https://www.youtube.com'
alias calendar='cmd.exe /c start https://calendat.google.com'
alias autograder='cmd.exe /c start https://autograder.io'
alias desmos='cmd.exe /c start https://www.desmos.com/calculator/'
alias deskgoose='cmd.exe /c start "" "C:\Users\kbelv\Downloads\Installers\DesktopGoose v0.3\GooseDesktop.exe"'

alias vimtips='cmd.exe /c start http://www.alecjacobson.com/weblog/?p=443'
alias tmuxtips='cmd.exe /c start https://tmuxcheatsheet.com/'

alias proj='launch *.vcxproj'

alias clean='rm -rvf *.exe *~ *.out *.dSYM *.stackdump'

alias syncsrcin='rsync -rtv --info=progress2 --info=name0 --exclude '.git*' --protect-args "kbelveal@login.engin.umich.edu:src/" "/mnt/c/Users/kbelv/src/"'
alias syncsrcout='rsync -rtv --info=progress2 --info=name0  --exclude '.git*' --protect-args "/mnt/c/Users/kbelv/src/" "kbelveal@login.engin.umich.edu:src/"'
alias cppc='cppcheck --language=c++ --std=c++11 --error-exitcode=1 *.cpp'
alias vlqocRepo='ssh root@68.41.30.112'

function ssh-caen { syncsrcout; ssh caen; syncsrcin; }

function caen-vnc { rsync -rtv --info=progress2 --info=name0 --exclude '.git*' --protect-args "/mnt/c/Users/kbelv/src/" "kbelveal@login.engin.umich.edu:src/"; cmd.exe /c start "C:\Users\kbelv\Downloads\Installers\caenvnc42.exe"; }
function vg { for i in *.exe; do valgrind -v --leak-check=full "./$i"; read -rsp $'Press any key to continue...\n' -n 1 key; done;}

function openweb { cmd.exe /c start https://"$1"; }
function editrc { vim ~/.bashrc; source ~/.bashrc; cp ~/.bashrc /mnt/c/Users/kbelv/OneDrive/configs/.bashrc; }
function launch { cmd.exe /c start "$1"; }
function oproj { goproj; proj; }

export -f ssh-caen
export -f caen-vnc
export -f openweb
export -f editrc
export -f launch
export -f vg
export -f launch
export -f oproj

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
